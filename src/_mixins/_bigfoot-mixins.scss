//  ___ __ __    ________  __     __    ________  ___   __    ______
// /__//_//_/\  /_______/\/__/\ /__/\  /_______/\/__/\ /__/\ /_____/\
// \::\| \| \ \ \__.::._\/\ \::\\:.\ \ \__.::._\/\::\_\\  \ \\::::_\/_
//  \:.      \ \   \::\ \  \_\::_\:_\/    \::\ \  \:. `-\  \ \\:\/___/\
//   \:.\-/\  \ \  _\::\ \__ _\/__\_\_/\  _\::\ \__\:. _    \ \\_::._\:\
//    \. \  \  \ \/__\::\__/\\ \ \ \::\ \/__\::\__/\\. \`-\  \ \ /____\:\
//     \__\/ \__\/\________\/ \_\/  \__\/\________\/ \__\/ \__\/ \_____\/
//

@import "bourbon";

@mixin transitions($transitions...) {
    $transition: nth($transitions, 1);
    @if length($transitions) > 1 {
        @for $i from 2 through length($transitions) {
            $transition: $transition + ", " + nth($transitions, $i);
        }
    }
    $transition: unquote($transition);
    -moz-transition: $transition;
    -webkit-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin transition-property($properties) {
    $prefixes: ("-webkit-", "-moz-", "-ms-", "");

    @each $prefix in $prefixes {
        #{unquote($prefix)}transition: prefix-properties($properties, $prefix);
    }
}

@function prefix-properties($properties, $prefix) {
    $new-props: property-checker(nth($properties, 1), $prefix);
    @if(length($properties) > 1) {
        @if length($properties) > 1 {
            @for $i from 2 through length($properties) {
                $new-props: $new-props + ", " + property-checker(nth($properties, $i), $prefix);
            }
        }
    }
    @return unquote($new-props);
}

@function property-checker($property, $prefix) {
    @if(unquote($property) == transform) {
        @return "" + quote($prefix) + quote($property);
    } @else {
        @return quote($property);
    }
}

@mixin long-shadow($type, $color, $length, $horizontalTo: left, $verticalTo: bottom) {
    $shadow: '';

    $leftOrRight: -1;
    @if $horizontalTo == right { $leftOrRight: 1; }
    $upOrDown: -1;
    @if $verticalTo == top { $upOrDown: 1; }

    @for $i from 1 to $length {
        $shadow: $shadow + $i * $leftOrRight + 'px ' + $i * $upOrDown + 'px 0px ' + $color + ',';
    }


    $shadow: $shadow + $leftOrRight * $length + 'px ' + $upOrDown * $length + 'px 0px ' + $color;

    $shadow: unquote($shadow);

    @if $type == 'box' {
        box-shadow: $shadow;
    } @else if $type == 'text' {
        text-shadow: $shadow;
    }
}

@mixin gradient($towards, $startColor, $stop, $toColor) {
    $towards : unquote($towards);
    $startingFrom: "";
    @if $towards == top {
        $startingFrom : bottom;
    } @else {
        $startingFrom : top;
    }

    background: $startColor;
    background: -moz-linear-gradient($startingFrom, $startColor 0%, $startColor $stop, $toColor 100%);
    background: -webkit-gradient(linear, left $startingFrom, left $towards, color-stop(0%, $startColor), color-stop($stop, $startColor), color-stop(100%, $toColor));
    background: -webkit-linear-gradient($startingFrom, $startColor 0%, $startColor $stop, $toColor 100%);
    background: -o-linear-gradient($startingFrom, $startColor 0%, $startColor $stop, $toColor 100%);
    background: -ms-linear-gradient($startingFrom, $startColor 0%, $startColor $stop, $toColor 100%);
    background: linear-gradient(to $towards, $startColor 0%, $startColor $stop, $toColor 100%);
}

@mixin print-styles {
    // These styles restore the original footnote numbers and texts when the page is printed
    @media not print {
        .footnote-print-only {
            display: none !important;
        }
    }

    @media print {
        .footnote-button {
            display: none !important;
        }
    }
}
